@model TradingVLU.Models.item

@{
    ViewBag.Title = "edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/Trumbowyg/dist/ui/trumbowyg.min.css" />
<link rel="stylesheet" href="~/Content/css/new_item.css" />

@using (Html.BeginForm("edit", "ItemManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        @*<div class="form-group">
                Edit Item
            </div>*@

        <div class="form-group">
            @*@Html.LabelFor(model => model.item_name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Item Name</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.item_name, new { htmlAttributes = new { @class = "abc" } })
                
                @Html.ValidationMessageFor(model => model.item_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Description</label>
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @cols = "50", @rows = "10" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Quantity</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.quantity, new { @cols = "100", @rows = "8", @style = "width:70%;" })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @*@Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Price</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "onlynumb" }, @cols = "100", @rows = "8", @style = "width:70%;" })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Phone Contact</label>
            <div class="col-md-5">
                @Html.EditorFor(model => model.phone_contact, new { htmlAttributes = new  { @class = "onlynum" } })
                @*@Html.ValidationMessageFor(model => model.phone_contact, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.index_image, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Avatar Image</label>
            <div class="col-md-10">
                <label>@Model.index_image</label>
                <input type="file" id="imgInp" name="avatar" accept=".jpeg, .jpg, .png">
                <img id='img-upload' />
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.index_image, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Detail Image 1</label>
            <div class="col-md-10">
                <label>@Model.detail_image1</label>
                <input type="file" id="pic01" name="pic01" accept=".jpeg, .jpg, .png">
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.index_image, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Detail Image 2</label>
            <div class="col-md-10">
                <label>@Model.detail_image2</label>
                <input type="file" id="pic02" name="pic02" accept=".jpeg, .jpg, .png">
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.index_image, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Detail Image 3</label>
            <div class="col-md-10">
                <label>@Model.detail_image3</label>
                <input type="file" id="pic03" name="pic03" accept=".jpeg, .jpg, .png">
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.index_image, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Detail Image 4</label>
            <div class="col-md-10">
                <label>@Model.detail_image4</label>
                <input type="file" id="pic04" name="pic04" accept=".jpeg, .jpg, .png">
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.index_image, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Detail Image 5</label>
            <div class="col-md-10">
                <label>@Model.detail_image5</label>
                <input type="file" id="pic05" name="pic05" accept=".jpeg, .jpg, .png">
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitR"  type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

<!--Script for Upload Image - OLD-->
@*<script>
        $(document).ready(function () {
            $(document).on('change', '.btn-file :file', function () {
                var input = $(this),
                    label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                input.trigger('fileselect', [label]);
            });

            $('.btn-file :file').on('fileselect', function (event, label) {

                var input = $(this).parents('.input-group').find(':text'),
                    log = label;

                if (input.length) {
                    input.val(log);
                } else {
                    if (log) alert(log);
                }

            });
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#img-upload').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }
            $("#imgInp").change(function () {
                readURL(this);
            });
        });
    </script>*@

@section _script_bottom{
    <script src="~/Content/Trumbowyg/dist/trumbowyg.min.js"></script>
    <script>
        $(".editor").trumbowyg();
    </script>
    <script>
        $(document).on('click', '#close-preview', function () {
            $('.image-preview').popover('hide');
            // Hover befor close the preview
            $('.image-preview').hover(
                function () {
                    $('.image-preview').popover('show');
                },
                function () {
                    $('.image-preview').popover('hide');
                }
            );
        });

        //check numb
        $('.onlynumb').on({
            keydown: function (e) {
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl/cmd+A
                    (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+C
                    (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+X
                    (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            },
            change: function () {
                this.value = this.value.replace(/\s/g, "");
            }
        });
        //check num
        $('.onlynum').on({
            keydown: function (e) {
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl/cmd+A
                    (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+C
                    (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: Ctrl/cmd+X
                    (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            },
            change: function () {
                this.value = this.value.replace(/\s/g, "");
            }
        });
        //check name 
        $("#abc").on("blur", function () {
            if ($(this).val().match('^[a-zA-Z]{10,100}$')) {
                alert("Valid name");
            } else {
                alert("That's not a name");
            }
        });

            // Create the close button
            var closebtn = $('<button/>', {
                type: "button",
                text: 'x',
                id: 'close-preview',
                style: 'font-size: initial;',
            });
            closebtn.attr("class", "close pull-right");
            // Set the popover default content
            $('.image-preview').popover({
                trigger: 'manual',
                html: true,
                title: "<strong>Preview</strong>" + $(closebtn)[0].outerHTML,
                content: "There's no image",
                placement: 'bottom'
            });
            // Clear event
            $('.image-preview-clear').click(function () {
                $('.image-preview').attr("data-content", "").popover('hide');
                $('.image-preview-filename').val("");
                $('.image-preview-clear').hide();
                $('.image-preview-input input:file').val("");
                $(".image-preview-input-title").text("Browse");
            });
            // Create the preview image
            $(".image-preview-input input:file").change(function () {
                var img = $('<img/>', {
                    id: 'dynamic',
                    width: 250,
                    height: 200
                });
                var file = this.files[0];
                var reader = new FileReader();
                // Set preview image into the popover data-content
                reader.onload = function (e) {
                    $(".image-preview-input-title").text("Change");
                    $(".image-preview-clear").show();
                    $(".image-preview-filename").val(file.name);
                    img.attr('src', e.target.result);
                    $(".image-preview").attr("data-content", $(img)[0].outerHTML).popover("show");
                }
                reader.readAsDataURL(file);
            });
        });

    </script>

}